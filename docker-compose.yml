version: '3.8'

services:
  app:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./api:/var/www
      - ./api/vendor:/var/www/vendor
      - ./api/storage:/var/www/storage
    networks:
      - app-network
    depends_on:
      - mysql
    env_file:
      - ./api/.env

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: travel_manager
    volumes:
      - db_data:/var/lib/mysql
      - /usr/share/zoneinfo:/usr/share/zoneinfo:ro
    networks:
      - app-network
    ports:
      - "3307:3306"

  nginx:
    image: nginx:alpine
    container_name: laravel_nginx
    restart: unless-stopped
    platform: linux/amd64
    ports:
      - "9001:80"
    volumes:
      - ./api:/var/www
      - ./api/nginx:/etc/nginx/conf.d
    networks:
      - app-network

  frontend:
    build:
      context: ./travel-manager
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    working_dir: /app
    volumes:
      - ./travel-manager:/app
      - /app/node_modules
    ports:
      - "8080:8080"
    networks:
      - app-network
    environment:
      - NODE_ENV=development

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
